{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","tick","clearInterval","setState","name","props","console","log","toLocaleTimeString","React","Component","App","isClockVisible","clockVisibility","changeName","prevState","newName","Math","trunc","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MAKEC,MAAQ,CACNC,KAAM,IAAIC,MANd,kEASuB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SACX,OAZN,6CAiBIC,cAAcJ,KAAKC,WAjBvB,6BAqBID,KAAKK,SAAS,CACZP,KAAM,IAAIC,SAtBhB,+BA0BY,IACAO,EAASN,KAAKO,MAAdD,KACAR,EAASE,KAAKH,MAAdC,KAKR,OAFAU,QAAQC,IAAIT,KAAKH,MAAMC,KAAKY,sBAG1B,oCACE,yCAEE,gCAASJ,IAEX,4BAAKR,EAAKY,2BAvClB,GAA2BC,IAAMC,WC6DlBC,G,kNA1DbhB,MAAQ,CACNiB,gBAAgB,EAChBR,KAAM,G,EAGRS,gBAAkB,WAChB,EAAKV,UAAS,SAAAR,GAAK,MAAK,CACtBiB,gBAAiBjB,EAAMiB,oB,EAI3BE,WAAa,kBACX,EAAKX,UAAS,SAACY,GACb,IAAMC,EAAUC,KAAKC,MAAsB,IAAhBD,KAAKE,UAOhC,OAJAb,QAAQC,IAAR,qCACgCQ,EAAUX,KAD1C,eACqDY,IAG9C,CACLZ,KAAMY,O,uDAKF,IAAD,EAC0BlB,KAAKH,MAA9BiB,EADD,EACCA,eAAgBR,EADjB,EACiBA,KAExB,OACE,yBAAKgB,UAAU,OACb,yBAAKA,UAAU,4BACZR,EACG,kBAAC,EAAD,CAAOR,KAAMA,IACb,sCAEJ,yBAAKgB,UAAU,sBACb,4BACEA,UAAU,eACVC,KAAK,SACLC,QAASxB,KAAKe,iBAEbD,EAAiB,aAAe,cAEnC,4BACEQ,UAAU,eACVC,KAAK,SACLC,QAASxB,KAAKgB,YAHhB,sB,GA7CML,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.e85e36b6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  static propTypes = {\n    name: PropTypes.number.isRequired,\n  };\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    const { name } = this.props;\n    const { date } = this.state;\n\n    // eslint-disable-next-line\n    console.log(this.state.date.toLocaleTimeString());\n\n    return (\n      <>\n        <p>\n          My name is:\n          <strong>{name}</strong>\n        </p>\n        <h1>{date.toLocaleTimeString()}</h1>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 0,\n  };\n\n  clockVisibility = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  };\n\n  changeName = () => (\n    this.setState((prevState) => {\n      const newName = Math.trunc(Math.random() * 100);\n\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prevState.name} to ${newName}`,\n      );\n\n      return {\n        name: newName,\n      };\n    })\n  );\n\n  render() {\n    const { isClockVisible, name } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__container container\">\n          {isClockVisible\n            ? <Clock name={name} />\n            : 'What time is it? Click \"Show clock\"'\n          }\n          <div className=\"App__button button\">\n            <button\n              className=\"button__item\"\n              type=\"button\"\n              onClick={this.clockVisibility}\n            >\n              {isClockVisible ? 'Hide clock' : 'Show clock'}\n            </button>\n            <button\n              className=\"button__item\"\n              type=\"button\"\n              onClick={this.changeName}\n            >\n              Change name\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}